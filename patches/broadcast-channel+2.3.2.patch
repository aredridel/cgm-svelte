diff --git a/node_modules/broadcast-channel/dist/es/method-chooser.js b/node_modules/broadcast-channel/dist/es/method-chooser.js
index cd6cdae..86f5c06 100644
--- a/node_modules/broadcast-channel/dist/es/method-chooser.js
+++ b/node_modules/broadcast-channel/dist/es/method-chooser.js
@@ -2,34 +2,13 @@ import NativeMethod from './methods/native.js';
 import IndexeDbMethod from './methods/indexed-db.js';
 import LocalstorageMethod from './methods/localstorage.js';
 import SimulateMethod from './methods/simulate.js';
-import { isNode } from './util'; // order is important
+import NodeMethod from "../../src/methods/node.js";
+import { isNode } from "./util.js";
 
 var METHODS = [NativeMethod, // fastest
 IndexeDbMethod, LocalstorageMethod];
-/**
- * The NodeMethod is loaded lazy
- * so it will not get bundled in browser-builds
- */
 
-if (isNode) {
-  /**
-   * we use the non-transpiled code for nodejs
-   * because it runs faster
-   */
-  var NodeMethod = require('../../src/methods/' + // use this hack so that browserify and others
-  // do not import the node-method by default
-  // when bundling.
-  'node.js');
-  /**
-   * this will be false for webpackbuilds
-   * which will shim the node-method with an empty object {}
-   */
-
-
-  if (typeof NodeMethod.canBeUsed === 'function') {
-    METHODS.push(NodeMethod);
-  }
-}
+if (isNode) { METHODS.unshift(NodeMethod) }
 
 export function chooseMethod(options) {
   // directly chosen
